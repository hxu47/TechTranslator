AWSTemplateFormatVersion: '2010-09-09'
Description: 'TechTranslator - CloudFront Distribution'

Parameters:
  ProjectName:
    Type: String
    Default: TechTranslator
    Description: Name of the project, used as prefix for resource names

Resources:
  CloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub 'OAI for ${ProjectName} website'

  WebsiteDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: !Sub '${ProjectName} Website Distribution'
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        PriceClass: PriceClass_100  # Use only North America and Europe for lower cost
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: true
          DefaultTTL: 86400  # 1 day
          MaxTTL: 31536000  # 1 year
          MinTTL: 0
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          TargetOriginId: s3-website-origin
          ViewerProtocolPolicy: redirect-to-https
        Origins:
          - DomainName: !ImportValue 
              Fn::Sub: "${AWS::StackName}-s3-WebsiteBucketRegionalDomainName"
            Id: s3-website-origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'
        ViewerCertificate:
          CloudFrontDefaultCertificate: true
      Tags:
        - Key: Project
          Value: !Ref ProjectName

  # Lambda function to update the bucket policy - Using an S3 bucket policy update instead
  UpdateWebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !ImportValue 
        Fn::Sub: "${AWS::StackName}-s3-WebsiteBucketName"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: CloudFrontAccess
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}'
            Action: 's3:GetObject'
            Resource: !Sub 'arn:aws:s3:::${ImportValue:${AWS::StackName}-s3-WebsiteBucketName}/*'
          - Sid: AllowLabRoleAccess
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:role/LabRole'
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:ListBucket
            Resource: 
              - !Sub 'arn:aws:s3:::${ImportValue:${AWS::StackName}-s3-WebsiteBucketName}'
              - !Sub 'arn:aws:s3:::${ImportValue:${AWS::StackName}-s3-WebsiteBucketName}/*'

Outputs:
  CloudFrontDistributionId:
    Description: ID of the CloudFront distribution
    Value: !Ref WebsiteDistribution
    Export:
      Name: !Sub '${AWS::StackName}-CloudFrontDistributionId'
  
  CloudFrontDomainName:
    Description: Domain name of the CloudFront distribution
    Value: !GetAtt WebsiteDistribution.DomainName
    Export:
      Name: !Sub '${AWS::StackName}-CloudFrontDomainName'
  
  CloudFrontURL:
    Description: URL of the CloudFront distribution
    Value: !Sub 'https://${WebsiteDistribution.DomainName}'
    Export:
      Name: !Sub '${AWS::StackName}-CloudFrontURL'